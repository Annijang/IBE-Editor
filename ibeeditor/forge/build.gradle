import net.minecraftforge.gradle.common.task.SignJar

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'

archivesBaseName = 'ibeeditor-forge'

minecraft {
    mappings channel: mappings_channel, version: mappings_version
    runs {
        client {
            workingDirectory rootProject.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=guapi-vanilla-theme-forge.mixins.json'
            mods {
                'ibeeditor-forge' {
                    source sourceSets.main
                }
                'gameadapter-forge' {
                    source project(':gameadapter:forge').sourceSets.main
                }
                'guapi-forge' {
                    source project(':guapi:forge').sourceSets.main
                }
                'guapi-vanilla-theme-forge' {
                    source project(':guapi:vanilla-theme:forge').sourceSets.main
                }
            }
        }

        server {
            workingDirectory rootProject.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'
            mods {
                'ibeeditor-forge' {
                    source sourceSets.main
                }
                'gameadapter-forge' {
                    source project(':gameadapter:forge').sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$forge_version"
    implementation project(':databindings:api')
    implementation project(':databindings:base')
    implementation project(':gameadapter:api')
    implementation project(':gameadapter:base')
    implementation project(':gameadapter:forge')
    implementation project(':guapi:api')
    implementation project(':guapi:base')
    implementation project(':guapi:forge')
    implementation project(':guapi:vanilla-theme:base')
    implementation project(':guapi:vanilla-theme:forge')
    implementation project(':ibeeditor:base')
}

processResources {
    from 'src/main/resources', '../base/src/main/resources'
}

task signCommonJar(type: SignJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = rootProject.buildCommon.archivePath
    outputFile = rootProject.buildCommon.archivePath
}

task signForgeJar(type: SignJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = rootProject.buildForge.archivePath
    outputFile = rootProject.buildForge.archivePath
}