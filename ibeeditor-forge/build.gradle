import net.minecraftforge.gradle.common.task.SignJar

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    mappings channel: mappings_channel, version: mappings_version
    runs {
        client {
            workingDirectory project.file('../run')
            arg '-mixin.config=ibeeditor.mixins.json'
            property 'forge.logging.console.level', 'debug'
            mods {
                ibeeditor {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('../run')
            property 'forge.logging.console.level', 'debug'
            mods {
                ibeeditor {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, 'ibeeditor.refmap.json'
}

dependencies {
    minecraft "net.minecraftforge:forge:$forge_version"
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
    implementation project(':databindings-api')
    implementation project(':gameadapter-api')
    implementation project(':gameadapter-impl-common')
    implementation project(':guapi-api')
    implementation project(':guapi-impl')
    implementation project(':ibeeditor-common')
}

processResources {
    from 'src/main/resources', '../ibeeditor-common/src/main/resources'
}

task signJar(type: SignJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.keyStore
    alias = project.keyStoreAlias
    storePass = project.keyStorePass
    keyPass = project.keyStoreKeyPass
    inputFile = rootProject.jar.archivePath
    outputFile = rootProject.jar.archivePath
}